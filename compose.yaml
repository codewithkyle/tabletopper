services:
  reverse-proxy:
    image: traefik:v3.1
    command:
      - "--providers.docker"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
  tabletopper:
    build:
      context: ./
      dockerfile: Dockerfile.http
    labels:
      - "traefik.http.routers.tabletopper.rule=Host(`tabletopper.local`)"
    volumes:
      - .:/app
    env_file: "./server/.env"
    depends_on:
      - mysql
      - reverse-proxy
      - redis
    networks:
      - app-network
  wss:
    build:
      context: ./
      dockerfile: Dockerfile.wss
    labels:
      - "traefik.http.routers.wss.rule=Host(`ws.tabletopper.local`)"
    depends_on:
      - mysql
      - reverse-proxy
      - redis
    networks:
      - app-network
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: "password"
      MYSQL_DATABASE: "tabletopper"
      MYSQL_USER: "ttadmin"
      MYSQL_PASSWORD: "password"
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
volumes:
  mysql_data:
  redis-data:
networks:
  app-network:
    driver: bridge

